/*
Copyright 2019 The Kubernetes Authors.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package prune

/*
Prune delete objects based on the inventory annotation, which has following format

kustomize.k8s.io/Inventory:
{
  "current":
    {
      "apps_v1_Deployment|default|mysql":null,
      "~G_v1_Secret|default|pass-dfg7h97cf6":
        [
          {
            "group":"apps",
            "version":"v1",
            "kind":"Deployment",
            "name":"mysql",
            "namespace":"default",
          }
        ],
      "~G_v1_Service|default|mysql":null
    }
  }
  "previous:
      {
      "apps_v1_Deployment|default|mysql":null,
      "~G_v1_Secret|default|pass-dfg7h97cf6":
        [
          {
            "group":"apps",
            "version":"v1",
            "kind":"Deployment",
            "name":"mysql",
            "namespace":"default",
          }
        ],
      "~G_v1_Service|default|mysql":null
    }
  }
}

Kusotmize.k8s.io/InventoryHash: <some hash>


This inventory annotation is generated automatically by Kustomize when `inventory` directive is
present in the kustomization.yaml file.

inventory:
  type: ConfigMap
  configMap:
    name: my-inventory
    namespace: default

The inventory object generated by Kustomize only contains "current" part in the annotation.
When this object is passed to apply, prune and delete, it doesn't contains the "previous" part.
The existing inventory object on cluster can contain both the "current" part and "previous" part.

Apply reads the existing inventory object and merge its "current" into "previous". The "current" is then set
to be the input inventory object's "current".

Prune reads the existing inventory object and delete any object that satisfies following conditions:
 - It does not show up in the "current" part
 - It does not referred by any object that shows up in the "current" part

The tests in this package covers following cases:
- A kustomization with one ConfigMap, which is not referred. When the name of this ConfigMap changes, prune
  deletes the previous ConfigMap
- A kustomization with one Secret and one Deployment, where the Secret is referred in the Deployment.
  When the name of the Secret changes, prune doesn't delete the previous Secrets since the Deployment
  object still exists.
- A kustomization with one Secret and one StatefulSet, where the Secret is referred in the StatefulSet.
  The case is the same as the above. When the name of the Secret changes, prune doesn't delete the previous
  Secrets.
- A kustomization with multiple objects. When a different namePrefix is added, all objects in that
  Kustomization have a different name. Prune deletes the previous set of objects and only keep the objects
  with the latest nameprefix.
*/
